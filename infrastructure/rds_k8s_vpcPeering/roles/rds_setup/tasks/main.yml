---
- name: Create VPC for RDS
  ec2_vpc_net:
    state: present
    region: "{{ aws_region }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: yes
    dns_support: yes
    multi_ok: no
    tenancy: default
    profile: "{{ aws_profile }}"
    tags:
      Name: "rds_vpc"
  register: rds_vpc

- name: Create Internet Gateway
  ec2_vpc_igw:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    vpc_id: "{{ rds_vpc.vpc.id }}"
    tags:
      Name: "rds_igw"
  register: rds_igw

- name: Create subnets
  ec2_vpc_subnet:
    state: present
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    az: "{{ item.value.az }}"
    vpc_id: "{{ rds_vpc.vpc.id }}"
    cidr: "{{ item.value.cidr }}"
    tags:
      Name: "rds_{{ item.value.az }}"
  with_dict: "{{ vpc_subnets }}"
  register: rds_vpc_subnets

- name: Grab the route tables
  ec2_vpc_route_table_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ rds_vpc.vpc.id }}"
  register: rds_route_table

- name: Update the route table in the vpc
  ec2_vpc_route_table:
    state: present
    lookup: id
    route_table_id: "{{ rds_route_table.route_tables[0].id }}"
    vpc_id: "{{ rds_vpc.vpc.id}}"
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    tags:
      Name: "rds_route_table_{{ rds_vpc.vpc.id }}"
    subnets:
        - "{{ rds_vpc_subnets.results[0].subnet.id }}"
        - "{{ rds_vpc_subnets.results[1].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ rds_igw.gateway_id }}"
  register: rds_route_table_updated

- name: Get k8s vpc info
  ec2_vpc_net_info:
    profile: "{{ aws_profile }}"
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ k8s_vpc_name }}"
  register: k8s_vpc

- name: Create vpc security groups
  ec2_group:
    state: present
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    vpc_id: "{{ rds_vpc.vpc.id }}"
    name: "rds_sg_{{ rds_vpc.vpc.id }}"
    description: "rds security group for {{ rds_vpc.vpc.id }}"
    rules:
      - proto: tcp
        ports:
        - 3306
        cidr_ip: "{{ k8s_vpc.vpcs[0].cidr_block }}"
        rule_desc: allow kubernetes cluster cidr
  register: rds_sg
  
- name: subnet groups for rds instance
  rds_subnet_group:
    region: "{{ aws_region }}"
    state: present
    name: MySQLDatabaseSubnets
    description: MySQL DB Subnet Group
    subnets:
      - "{{ rds_vpc_subnets.results[0].subnet.id }}"
      - "{{ rds_vpc_subnets.results[1].subnet.id }}"

- name: Launch RDS Instance
  rds:
    command: create
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    db_engine: MySQL
    instance_name: "csye7125"
    db_name: "csye7125"
    vpc_security_groups: "{{ rds_sg.group_id }}"
    subnet: MySQLDatabaseSubnets
    size: "20"
    instance_type: db.t2.micro
    publicly_accessible: no
    wait: yes
    wait_timeout: 900
    username: root
    password: 11223344
    tags:
      Name: "csye7125"
  async: 900
  poll: 0
  register: csye7125

- name: Launch RDS Instance csye7125_poller
  rds:
    command: create
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    db_engine: MySQL
    instance_name: "csye7125poller"
    db_name: "csye7125_poller"
    vpc_security_groups: "{{ rds_sg.group_id }}"
    subnet: MySQLDatabaseSubnets
    size: "20"
    instance_type: db.t2.micro
    publicly_accessible: no
    wait: yes
    wait_timeout: 900
    username: root
    password: 11223344
    tags:
      Name: "csye7125_poller"
  async: 900
  poll: 0
  register: csye7125_poller

- name: Launch RDS Instance csye7125_notifier
  rds:
    command: create
    region: "{{ aws_region }}"
    profile: "{{ aws_profile }}"
    db_engine: MySQL
    instance_name: "csye7125notifier"
    db_name: "csye7125_notifier"
    vpc_security_groups: "{{ rds_sg.group_id }}"
    subnet: MySQLDatabaseSubnets
    size: "20"
    instance_type: db.t2.micro
    publicly_accessible: no
    wait: yes
    wait_timeout: 900
    username: root
    password: 11223344
    tags:
      Name: "csye7125_notifier"
  async: 900
  poll: 0
  register: csye7125_notifier



- name: 'csye7125 - check on fire and forget task'
  async_status: jid={{ csye7125.ansible_job_id }}
  register: job_result
  until: job_result.finished
  retries: 30
  delay: 30

- name: 'csye7125_poller - check on fire and forget task'
  async_status: jid={{ csye7125_poller.ansible_job_id }}
  register: job_result
  until: job_result.finished
  retries: 30
  delay: 30

- name: 'csye7125_notifier - check on fire and forget task'
  async_status: jid={{ csye7125_notifier.ansible_job_id }}
  register: job_result
  until: job_result.finished
  retries: 30
  delay: 30


